Vagrant.configure('2') do |config|

  config.vm.provider :proxmox do |proxmox|
      proxmox.endpoint = 'https://my-proxmox-server.com/api2/json'
      proxmox.user_name = 'vagrant'
      proxmox.password = 'password'
      proxmox.vm_id_range = 900..910
      proxmox.vm_type = :qemu
      proxmox.qemu_os = :l26
      proxmox.qemu_disk_size = '30G'
      proxmox.qemu_storage = 'local'
      proxmox.qemu_iso_file = '/home/user/system.iso'
      proxmox.vm_name_prefix = 'vagrant_test_'
      proxmox.qemu_cores = 1
      proxmox.qemu_sockets = 1
      proxmox.qemu_nic_model = 'virtio'
      proxmox.qemu_bridge = 'vmbr0'
      proxmox.vm_memory = 512
  end

  config.vm.define :box, primary: true do |box|
      box.vm.box = 'dummy'
      box.vm.network :public_network, ip: '192.168.0.1', macaddress: 'ff:aa:cc:dd:bb:ee'
  end

  config.vm.define "dc" do |cfg|
    cfg.vm.box = "windows_2016"
    cfg.vm.hostname = "dc"

    # use the plaintext WinRM transport and force it to use basic authentication.
    # NB this is needed because the default negotiate transport stops working
    #    after the domain controller is installed.
    #    see https://groups.google.com/forum/#!topic/vagrant-up/sZantuCM0q4
    cfg.winrm.transport = :plaintext
    cfg.winrm.basic_auth_only = true

    cfg.vm.communicator = "winrm"
    cfg.vm.network :forwarded_port, guest: 5985, host: 5985, id: "winrm", auto_correct: true
    cfg.vm.network :forwarded_port, guest: 22, host: 2222, id: "ssh", auto_correct: true
    cfg.vm.network :forwarded_port, guest: 3389, host: 3389, id: "rdp", auto_correct: true
    cfg.vm.network :private_network, ip: "192.168.38.2", gateway: "192.168.38.1"

    cfg.vm.provision "shell", path: "scripts/fix-second-network.ps1", privileged: false, args: "192.168.38.2"
    cfg.vm.provision "shell", path: "scripts/provision.ps1", privileged: false
    cfg.vm.provision "reload"
    cfg.vm.provision "shell", path: "scripts/provision.ps1", privileged: false

    cfg.vm.provider "vmware_fusion" do |v, override|
      v.memory = 768
      v.cpus = 1
      v.gui = true
    endDescription

    cfg.vm.provider "virtualbox" do |vb, override|
      vb.gui = true
      vb.customize ["modifyvm", :id, "--memory", 768]
      vb.customize ["modifyvm", :id, "--cpus", 1]
      vb.customize ["modifyvm", :id, "--vram", "32"]
      vb.customize ["modifyvm", :id, "--clipboard", "bidirectional"]
      vb.customize ["setextradata", "global", "GUI/SuppressMessages", "all" ]
    end
  end
end